#!/bin/bash

# check whether nmcli is installed or not
echo "Ensure you have older version of openssl installed, such as openssl 1.1"


MANAGER="nmcli"
if command -v "$MANAGER" >/dev/null 2>&1; then
    echo "$MANAGER is installed."
else
    echo "$MANAGER is not installed."
fi

INTERFACE=$(cat /proc/net/wireless | grep ':' | cut -d ':' -f 1)


available_networks=()
echo "Scanning for available networks..."
wifi_list=$(nmcli dev wifi list)

# Check for 'eduroam' in the list
if echo "$wifi_list" | grep -q 'eduroam'; then
    # Add it to the array
    available_networks+=("eduroam")
fi

# Check for 'polimi-protected' in the list
if echo "$wifi_list" | grep -q 'polimi-protected'; then
    # Add it to the array
    available_networks+=("polimi-protected")
fi

choice=0

# Output the available networks
if [ ${#available_networks[@]} -gt 0 ]; then
    # Show available networks
    echo "Available networks: "
    for (( i=0; i<${#available_networks[@]}; i++ ));
    do
        echo "[$((i+1))]: ${available_networks[$i]}"
    done
     
    while true; do
    # Prompt the user to enter network number
    read -p "Enter your selected network(number): " choice 

    # Check if the choice is a valid number and smaller than the threshold
    if [[ "$choice" =~ ^[0-9]+$ && "$choice" -le "${#available_networks[@]}" ]]; then
        break
    else
        echo "Invalid choice. Please enter a number smaller than ${#available_networks[@]}."
    fi
    done
else
    echo "No target networks found."
fi

SSID=${available_networks[$((choice-1))]}
# Get user identity
IDENTITY=0
read -p "Enter your person code(codice persona): " IDENTITY
if ! [[ "$IDENTITY" =~ ^[0-9]+$ ]]; then
    echo "Invalid person code!"
fi
echo $IDENTITY

cert_path=

read -p "Enter the certificate path: " cert_path

# Check if the cert_path exists
if [ -e "$cert_path" ]; then
    # Check if the cert_path ends with .p12
    if [[ "$cert_path" != *.p12 ]]; then
        echo "Incorrect certificate"
    fi
else
    echo "The certificate path '$cert_path' does not exist"
    exit 1  # Exit the script with status code 1 (indicating an error)
fi

password= 

read -p "Enter your private key: " password

directory=$(dirname $cert_path)

/usr/bin/openssl-1.1 pkcs12 -in $cert_path -out "$directory/eduroam-cert.pem" -clcerts -nokeys --passin pass:$password

/usr/bin/openssl-1.1 pkcs12 -in $cert_path -out "$directory/eduroam-key.pem" -nodes -nocerts --passin pass:$password


nmcli connection add type wifi ifname $INTERFACE con-name $SSID ssid $SSID \
                wifi-sec.key-mgmt wpa-eap \
                802-1x.eap tls \
                802-1x.identity "${IDENTITY}@polimi.it" \
                802-1x.system-ca-certs true \
                802-1x.domain-match "wifi.polimi.it" \
      802-1x.client-cert "$directory/eduroam-cert.pem" \
                802-1x.private-key "$directory/eduroam-key.pem" \
                802-1x.private-key-password-flags 4 \



